/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: "java"
apply plugin: "application"
apply plugin: "eclipse"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    
    // maven repository
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    // api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    // logging via slf4j and logback
    // for logging
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    
    // logback binder
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    
    // adding in lombok for boilerplate reduction
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.18'
    
    // dependencies for apache poi for word docs
    // using	 XWPF or XML Word Processor Format or docx format
    compile group: 'org.apache.poi', name: 'poi', version: '3.17'
    
    // for ooxml gives the classes for making documents like the XWPFDocument class
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.17'
    
    // for schemas
    compile group: 'org.apache.poi', name: 'poi-ooxml-schemas', version: '3.17'
}

